from typing import Dict, Callable

# Define instruction mappings
INSTRUCTION_MAP: Dict[str, str] = {
    # Type 1 instructions
    "00000000": "rot-r",
    "00000001": "rot-l",
    "00000010": "rot-rc",
    "00000011": "rot-lc",
    "00000100": "from-mba",
    "00000101": "to-mba",
    "00000110": "from-mdc",
    "00000111": "to-mdc",
    "00001000": "addc-mba",
    "00001001": "add-mba",
    "00001010": "subc-mba",
    "00001011": "sub-mba",
    "00001100": "inc*-mba",
    "00001101": "dec*-mba",
    "00001110": "inc*-mdc",
    "00001111": "dec*-mdc",
    
    # Type 2 instructions
    "00011010": "and-ba",
    "00011011": "xor-ba",
    "00011100": "or-ba",
    "00011101": "and*-mba",
    "00011110": "xor*-mba",
    "00011111": "or*-mba",
    
    # Type 3 instructions
    "00101010": "clr-cf",
    "00101011": "set-cf",
    "00101110": "ret",
    
    # Type 4 instructions
    "00110010": "from-ioa",
    "00110001": "inc",
    "00110110": "bcd",
    "0011011100111110": "shutdown",
    "00111110": "nop",
    "00111111": "dec",
}

# Register mappings
REGISTERS = {
    "000": "0",
    "001": "1",
    "010": "2",
    "011": "3",
    "100": "4"
}

def disassemble_instruction(binary: str) -> str:
    # Check for special 16-bit instructions first
    if binary.startswith("0011011100111110"):
        return "shutdown", 2
    
    # Check for 8-bit instructions in the map
    if len(binary) >= 8 and binary[:8] in INSTRUCTION_MAP:
        return INSTRUCTION_MAP[binary[:8]], 1
    
    # Handle Type 5 instructions (arithmetic with immediate)
    if binary.startswith("0100"):
        opcode = binary[:8]
        imm = binary[12:16]
        if opcode == "01000000":
            return f"add {int(imm, 2)}", 2
        elif opcode == "01000001":
            return f"sub {int(imm, 2)}", 2
        elif opcode == "01000010":
            return f"and {int(imm, 2)}", 2
        elif opcode == "01000011":
            return f"xor {int(imm, 2)}", 2
        elif opcode == "01000100":
            return f"or {int(imm, 2)}", 2
        elif opcode == "01000110":
            return f"r4 {int(imm, 2)}", 2
    
    # Handle Type 6 instructions (register pairs)
    if binary.startswith("0101") or binary.startswith("0110"):
        ar = binary[:4]
        imm = binary[4:12]
        if ar == "0101":
            return f"rarb {int(imm, 2)}", 2
        elif ar == "0110":
            return f"rcrd {int(imm, 2)}", 2
    
    # Handle Type 7 instructions (acc immediate)
    if binary.startswith("0111"):
        imm = binary[4:8]
        return f"acc {int(imm, 2)}", 1
    
    # Handle Type 8 instructions (b-bit)
    if binary.startswith("100"):
        k = binary[3:5]
        imm = binary[5:16]
        return f"b-bit {int(k, 2)} {int(imm, 2)}", 2
    
    # Handle Type 9-13 instructions (branches)
    if binary.startswith("10100"):
        return f"bnz-a {int(binary[5:16], 2)}", 2
    elif binary.startswith("10101"):
        return f"bnz-b {int(binary[5:16], 2)}", 2
    elif binary.startswith("10110"):
        return f"beqz {int(binary[5:16], 2)}", 2
    elif binary.startswith("10111"):
        return f"bnez {int(binary[5:16], 2)}", 2
    elif binary.startswith("11000"):
        return f"beqz-cf {int(binary[5:16], 2)}", 2
    elif binary.startswith("11001"):
        return f"bnez-cf {int(binary[5:16], 2)}", 2
    elif binary.startswith("11011"):
        return f"bnz-d {int(binary[5:16], 2)}", 2
    
    # Handle Type 14-15 instructions (b/call)
    if binary.startswith("1110"):
        imm = binary[4:16]
        return f"b {int(imm, 2)}", 2
    elif binary.startswith("1111"):
        imm = binary[4:16]
        return f"call {int(imm, 2)}", 2
    
    # Handle register operations (Type 2 variants)
    if binary.startswith("0001") or binary.startswith("0010"):
        reg = binary[4:7]
        op = binary[7]
        if binary.startswith("0001"):
            return f"{'inc*-reg' if op == '0' else 'dec*-reg'} {REGISTERS[reg]}", 1
        elif binary.startswith("0010"):
            return f"{'to-reg' if op == '0' else 'from-reg'} {REGISTERS[reg]}", 1
    
    return f"; Unknown instruction: {binary[:8]}", 1

def disassemble(binary_code: str) -> str:
    # Split into individual lines and remove empty lines
    lines = [line.strip() for line in binary_code.split('\n') if line.strip()]
    
    output = []
    address = 0
    
    i = 0
    while i < len(lines):
        line = lines[i]
        
        # Check if we need to combine two 8-bit lines for a 16-bit instruction
        if (i + 1 < len(lines) and 
            (line.startswith("0100") or  # Type 5
             line.startswith("0101") or  # Type 6
             line.startswith("0110") or  # Type 6
             line.startswith("100") or   # Type 8
             line.startswith("101") or   # Type 9-13
             line.startswith("110") or   # Type 9-13
             line.startswith("111") or   # Type 14-15
             (line.startswith("00110111") and lines[i+1].startswith("00111110")))):  # shutdown
            
            combined = line + lines[i+1]
            instruction, size = disassemble_instruction(combined)
            output.append(f"{(address+1):04d}: {instruction}")
            address += size
            i += size
        else:
            instruction, size = disassemble_instruction(line)
            output.append(f"{(address+1):04d}: {instruction}")
            address += size
            i += 1
    
    return '\n'.join(output)

# Example usage
binary_input = """11100001
10100000
00100001
01100010
00001111
00000111
00100011
01100011
00001111
00000111
00100001
00100100
00100011
00100110
00101001
10000000
00101111
10001000
01110001
10010000
10010011
10011001
00110101
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
01110001
01010010
00001111
00101010
00001001
00000101
01110000
01010011
00001111
00001000
00000101
01110101
01010100
00001111
00000101
00000110
00101010
00001011
00000111
01000110
00000000
11001000
01100011
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00101110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
01100010
00001111
00000110
00100000
01100011
00001111
00000110
00100010
00001101
00111110
00111110
00111110
00101110
00111110
01110001
01010010
00001111
00101010
00001001
00000101
01110000
01010011
00001111
00001000
00000101
01110101
01010100
00001111
00000101
00000110
00101010
00001001
00000111
01100010
00001111
00000110
00100000
01100011
00001111
00000110
00100010
00001000
00000101
01000110
00000000
00101110
00111110
00111110
00111110
00100101
01010101
00001111
00000101
00100111
01010110
00001111
00000101
01110010
01010010
00001111
00101010
00001001
00000101
00100100
01110000
01010011
00001111
00001000
00000101
00100110
00000110
00000000
00000111
10011000
11001011
01000110
00000000
00111110
00101110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
01010101
00001111
00000100
01010010
00001111
00000101
00100100
01010110
00001111
00000100
01010011
00001111
00000101
00100110
01110001
01010010
00001111
00101010
00001001
00000101
01110000
01010011
00001111
00001000
00000101
01110001
01010100
00001111
00000101
00000110
00101010
00001011
00000111
01000110
00000001
11001001
00001101
00101110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
01100010
00001111
00000110
00100000
01100011
00001111
00000110
00100010
00001101
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00101110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00100101
01010101
00001111
00000101
00100111
01010110
00001111
00000101
01110010
01010010
00001111
00101010
00001001
00000101
00100100
01110000
01010011
00001111
00001000
00000101
00100110
00000110
00000001
00000111
10000001
01101101
01000110
00000000
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00101110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
01010101
00001111
00000100
01010010
00001111
00000101
00100100
01010110
00001111
00000100
01010011
00001111
00000101
00100110
01110001
01010010
00001111
00101010
00001001
00000101
01110000
01010011
00001111
00001000
00000101
01110001
01010100
00001111
00000101
00000110
00101010
00001001
00000111
01100010
00001111
00000110
00100000
01100011
00001111
00000110
00100010
00001000
00000101
01000110
00000001
00111110
00111110
00111110
00111110
00111110
00111110
00101110
00110010
01011101
00001111
10110001
11000011
00000100
11100001
11011100
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00000101
00101000
01010101
00000000
00111110
00111110
11110000
00000000
00101001
11100001
11011100
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
10110011
01000011
01010110
00000000
01111100
00011011
10111010
01101001
01010101
00000000
01110000
00011011
11100001
11111111
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
10110101
00011111
01110101
00011011
11100010
00010011
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
10110101
00011111
01111010
00011011
11100010
00110011
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
10110101
00011111
01111111
00011011
11100010
01010011
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
10110101
00011111
00111110
00111110
11100011
01000011
00111110
00111110
00111110
00111110
01111101
00011011
10111010
11001011
01010101
00000000
01110100
00011011
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
10110101
00011111
01111001
00011011
11100010
10010011
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
10110101
00011111
01111110
00011011
11100010
10110011
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
10110101
00011111
00111110
00111110
11100011
01000011
00111110
00111110
00111110
00111110
00111110
00111110
01111110
00011011
11100010
11011101
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
10111011
01000011
01010101
00000000
01110011
00011011
11100010
11111001
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
10110101
00011111
01111000
00011011
11100011
00010011
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
10110101
00011111
01111101
00011011
11100011
00110011
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
10110101
00011111
00111110
00111110
01111100
01010011
00001111
00000101
01010110
00000000
00000100
01010011
00001111
00101010
00001011
11100011
01011110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
11001101
00011111
01111111
01010110
00000000
00011011
10111011
10000101
01010101
00000000
00000100
01010010
00001111
00000101
01111111
00101010
00001011
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
11001101
00011111
00111110
00111110
00111110
00111110
01110000
01010100
00001111
00000101
01010101
00000000
00000100
01010010
00000000
00011011
01010100
00001111
00011111
01010110
00000000
00000100
01010011
00000000
00011011
01010100
00001111
00011111
01010111
00000000
00000100
01010100
00000000
00011011
01010100
00001111
00011111
00000100
10110100
10110000
01100101
00000000
00000110
00100000
01100110
00000000
00000110
00100010
01100111
00000000
00000110
00011010
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
10111101
00011111
01110000
01011111
00001111
00000101
01101000
00000000
00000110
00100000
01101001
00000000
00000110
00100010
01101010
00000000
00000110
00011101
01011101
00000000
00000100
00101000
01011000
00000000
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
11110000
00000000
01011100
00000000
00000100
00100110
01010011
00001111
00000101
01110001
01010010
00001111
00000101
01011011
00000000
00000100
00100100
01010010
00001111
00101010
00001011
00000101
00000110
00101000
11001100
00011010
00111110
11100100
00101101
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
01010011
00001111
00001101
11100100
00101101
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
01110000
01010011
00001111
00011011
10111100
01010001
01111101
01010100
00001111
00000101
01010010
00001111
00000100
01010100
00001111
00101010
00001011
11001100
11011110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
01010010
00001111
00000100
00100100
01010011
00001111
00000100
00100110
00000110
00100000
00101001
00000111
00100001
00101000
01110001
01010100
00001111
00000101
01010010
00001111
00000100
01010100
00001111
00101010
00001011
00000101
11001100
10001011
11100100
00101101
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
01010011
00001111
00001101
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
11100100
00101101
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
01110001
01011111
00001111
00000101
01110001
01010000
00000000
00101010
00001001
00000101
01010001
00000000
00001000
00000101
01110001
01011011
00000000
00101010
00001001
00000101
01011100
00000000
00001000
00000101
01011110
00001111
00001100
11100100
11011011
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
01101011
00000000
00000110
00100000
01101100
00000000
00000110
00100010
01101101
00001111
00000110
00000101
01100101
00000000
00000110
00100000
01100110
00000000
00000110
00100010
01100111
00000000
00000110
00011101
01011111
00001111
00000100
00111110
00111110
00111110
00111110
00111110
00111110
00111110
10110001
10100000
11100101
00100010
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00111110
00110111
00111110
00111110
00111110
01011101
00001111
00000100
01011010
00001111
00001001
00000101
01011100
00001111
00001001
00000101
01011011
00001111
00001001
00000101
01111100
00011101
"""

disassembled_code = disassemble(binary_input)
print(disassembled_code)

# Save to a file
with open("disassembled.asm", "w") as f:
    f.write(disassembled_code)